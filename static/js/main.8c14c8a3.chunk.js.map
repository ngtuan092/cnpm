{"version":3,"sources":["components/FormNote.js","components/InputBar.js","components/Form.js","App.js","index.js"],"names":["FormNote","props","children","InputBar","htmlFor","label","name","require","type","id","onChange","value","val","max","end","error_msg","nameRegex","ICregex1","ICregex2","copyObjectOf","obj","JSON","parse","stringify","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","Form","state","fields","gender","dob","registrationNumber","phoneNumber","email","ngayKhaiBao","vungDich","symtoms","errors","handleSubmit","bind","handleChange","handleValidation","event","this","formIsValid","match","test","setState","timerID","setInterval","tick","today","clearInterval","e","console","log","componentWillUnmount","alert","preventDefault","target","checked","action","method","onSubmit","toUpperCase","disabled","defaultValue","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c14c8a3.chunk.js","sourcesContent":["import React from 'react'\r\nfunction FormNote(props) {\r\n    return (\r\n        <em> \r\n            {props.children}\r\n            <br />\r\n        </em>\r\n    )\r\n}\r\nexport default FormNote","import React from 'react'\r\n\r\nfunction InputBar(props) {\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.label}>{props.name}{props.require ? <em>(*)</em> : null}:</label>\r\n            {(props.type === 'date') ?\r\n                <input id={props.label} type={props.type} name={props.label} onChange={props.onChange} value={props.val} max={props.end}/>\r\n                :\r\n                <input id={props.label} type={props.type} name={props.label} onChange={props.onChange} value={props.val} />\r\n            }\r\n            <span>{props.error_msg}</span>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputBar\r\n\r\n","import React from 'react'\r\nimport FormNote from './FormNote'\r\nimport InputBar from './InputBar'\r\n// import PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\nconst nameRegex = /[^\\p{L} ]/u\r\nconst ICregex1 = /\\d{9}/\r\nconst ICregex2 = /\\d{12}/\r\nfunction copyObjectOf(obj) {\r\n    return JSON.parse(JSON.stringify(obj))\r\n}\r\n// const fieldNames = {\r\n//     gender: 'gender',\r\n//     iN: 'identityNumber',\r\n//     dob: 'dob',\r\n//     regNum: 'registrationNum',\r\n//     phoneNum: 'phoneNum'\r\n// }\r\nfunction formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {\r\n                gender: '-Chọn-',\r\n                name: '',\r\n                dob: '',\r\n                registrationNumber: '',\r\n                phoneNumber: '',\r\n                email: '',\r\n                ngayKhaiBao: '',\r\n                vungDich: '',\r\n                symtoms: '',\r\n            },\r\n            errors: {\r\n\r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleValidation = this.handleValidation.bind(this)\r\n    }\r\n    handleValidation(event) {\r\n        const fields = copyObjectOf(this.state.fields);\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Name\r\n        if (!fields['name']) {\r\n            formIsValid = false;\r\n            errors['name'] = 'Hãy điền trường còn trống';\r\n        }\r\n\r\n        if (typeof fields['name'] !== 'undefined') {\r\n            if (fields['name'].match(nameRegex)) {\r\n                formIsValid = false;\r\n                errors['name'] = 'Chỉ các chữ cái';\r\n            }\r\n            if (fields['name'].match(/\\s{2,}/u)) {\r\n                formIsValid = false;\r\n                errors['name'] = 'Tên không hợp lệ'\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // Date of birth\r\n        if (!this.state.fields['dob']) {\r\n            formIsValid = false;\r\n            errors['dob'] = 'Chọn ngày sinh'\r\n        }\r\n\r\n        // CMND\r\n        if (!fields['identityNumber']) {\r\n            formIsValid = false;\r\n            errors['identityNumber'] = 'Hãy điền trường còn trống';\r\n        }\r\n\r\n        if (typeof fields['identityNumber'] !== 'undefined') {\r\n            if (!(fields['identityNumber'].match(ICregex1) || fields['identityNumber'].match(ICregex2))) {\r\n                formIsValid = false;\r\n                errors['identityNumber'] = 'CCCD/CMT không hợp lệ';\r\n            }\r\n        }\r\n        // gender\r\n        if (this.state.fields['gender'] === '-Chọn-') {\r\n            formIsValid = false;\r\n            errors['gender'] = 'Hãy chọn giới tính của bạn'\r\n        }\r\n\r\n        // mã nhân khẩu\r\n        if (!fields['registrationNumber']) {\r\n            formIsValid = false;\r\n            errors['registrationNumber'] = 'Hãy điền trường còn trống';\r\n        }\r\n\r\n        if (typeof fields['registrationNumber'] !== 'undefined') {\r\n            if (!fields['registrationNumber'].match(ICregex2)) {\r\n                formIsValid = false;\r\n                errors['registrationNumber'] = 'Mã không hợp lệ';\r\n            }\r\n        }\r\n\r\n        // số điện thoại\r\n        if (typeof fields['phoneNumber'] !== 'undefined') {\r\n            if (!fields['phoneNumber'].match(/\\d{10}/)) {\r\n                formIsValid = false;\r\n                errors['phoneNumber'] = 'Số điện thoại không hợp lệ';\r\n            }\r\n        }\r\n\r\n        // email\r\n        if (typeof fields['email'] !== 'undefined') {\r\n            if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(fields.email))) {\r\n                formIsValid = false;\r\n                errors['email'] = 'Email không hợp lệ';\r\n            }\r\n        }\r\n        // ngày khai báo\r\n        if (!this.state.fields['ngayKhaiBao']) {\r\n            formIsValid = false;\r\n            errors['ngayKhaiBao'] = 'Chưa đặt ngày khai báo'\r\n        }\r\n\r\n        // Vùng dịch\r\n        if (!this.state.fields['vungDich']) {\r\n            formIsValid = false;\r\n            errors['vungDich'] = 'Trường bắt buộc'\r\n        }\r\n\r\n        // symtoms\r\n        if (!this.state.fields['symtoms']) {\r\n            formIsValid = false;\r\n            errors['symtoms'] = 'Chọn ngày sinh'\r\n        }\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => {\r\n            this.tick()\r\n        }, 1000);\r\n    }\r\n    tick() {\r\n        this.setState({ today: formatDate(new Date()) })\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID)\r\n    }\r\n    handleSubmit(e) {\r\n        console.log(this.state.fields)\r\n        this.componentWillUnmount()\r\n        if (!this.handleValidation())\r\n            alert('Errors occur!')\r\n        else\r\n            alert('Submit succesfully')\r\n\r\n        e.preventDefault()\r\n    }\r\n    handleChange(e) {\r\n        console.log(this.state.fields)\r\n        const target = e.target\r\n        const name = target.name\r\n        const value = target.type === 'checkbox' ? target.checked : target.value\r\n        const fields = copyObjectOf(this.state.fields)\r\n        fields[name] = value\r\n        this.setState({ fields: fields })\r\n    }\r\n    render() {\r\n        const action = this.props.action || '#'\r\n        const method = this.props.method\r\n        const fields = copyObjectOf(this.state.fields)\r\n        const today = this.state.today\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} action={action} method={method}>\r\n                    <fieldset>\r\n                        <legend>Thông tin cá nhân</legend>\r\n                        <InputBar label='name' name='Họ và tên' type='text' onChange={this.handleChange} require={true} error_msg={this.state.errors['name']} val={fields['name'].toUpperCase()} />\r\n                        <InputBar label='dob' name='Ngày sinh' require={true} error_msg={this.state.errors['dob']} type='date' onChange={this.handleChange} val={fields.dob} end={today} />\r\n                        <InputBar label='identityNumber' name='CCCD/CMND' require={true} type='text' error_msg={this.state.errors['identityNumber']} onChange={this.handleChange} />\r\n                        <label htmlFor='gender'>Giới tính<em>(*)</em>: </label>\r\n                        <select id='gender' name='gender' value={this.state.fields['gender']} onChange={this.handleChange}>\r\n                            <option disabled defaultValue={true} value='-Chọn-'>-Chọn-</option>\r\n                            <option value='male'>Nam</option>\r\n                            <option value='female'>Nữ</option>\r\n                        </select>\r\n                        <span>{this.state.errors['gender']}</span>\r\n                        <InputBar label='registrationNumber' name='Mã nhân khẩu' type='text' onChange={this.handleChange} require={true} error_msg={this.state.errors['registrationNumber']} val={fields.registrationNumber} />\r\n                        <InputBar label='phoneNumber' name='Số điện thoại' onChange={this.handleChange} type='text' require={false} error_msg={this.state.errors['phoneNumber']} val={fields.phoneNumber} />\r\n                        {/* <PhoneInput country='vn'/>\r\n                        <br /> */}\r\n                        <InputBar label='email' name='Email' val={fields['email']} error_msg={this.state.errors['email']} type='text' require={false} onChange={this.handleChange} />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <legend>Thông tin dịch tễ</legend>\r\n                        <InputBar\r\n                            type='date'\r\n                            val={fields.ngayKhaiBao}\r\n                            label='ngayKhaiBao'\r\n                            onChange={this.handleChange}\r\n                            require={true}\r\n                            error_msg={this.state.errors['ngayKhaiBao']}\r\n                            name='Ngày khai báo'\r\n                            end={today}\r\n                        />\r\n\r\n                        <InputBar label='vungDich' name='Vùng dịch' require={true} error_msg={this.state.errors['vungDich']} type='text' onChange={this.handleChange} val={fields.vungDich} />\r\n                        <InputBar label='symtoms' name='Biểu hiện, triệu chứng' require={true} error_msg={this.state.errors['symtoms']} onChange={this.handleChange} val={fields.symtoms} type='text' />\r\n                    </fieldset>\r\n                    <FormNote>((*): Những trường bắt buộc phải điền)</FormNote>\r\n                    <input type='submit' value='Thêm mới' />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form","import React from 'react'\r\nimport Form from './components/Form'\r\nfunction App(props) {\r\n    return (\r\n        <div>\r\n            <h1>Thêm mới thông tin dịch tễ</h1>  \r\n            <Form />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}